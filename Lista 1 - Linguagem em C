//EXERCÍCIO 1 

#include <stdio.h>

int main() {
    int pontuacao[3][5];  // Matriz para armazenar a pontuação de cada jogador em cada rodada (3 jogadores e 5 rodadas)
    int total[3] = {0, 0, 0};  // Vetor para armazenar o total de pontos de cada jogador
    int vencedor = 0;  // Índice do jogador vencedor (inicialmente o primeiro jogador)

    // Laço para capturar a pontuação de cada jogador nas 5 rodadas
    for (int i = 0; i < 3; i++) {
        printf("Jogador %d:\n", i + 1);  // Solicita as pontuações para o jogador i
        for (int j = 0; j < 5; j++) {
            scanf("%d", &pontuacao[i][j]);  // Leitura da pontuação da rodada j para o jogador i
            total[i] += pontuacao[i][j];  // Soma a pontuação da rodada à pontuação total do jogador
        }

        // Verifica se o jogador i tem a maior pontuação total
        if (total[i] > total[vencedor]) {
            vencedor = i;  // Atualiza o índice do vencedor se o jogador i tiver mais pontos
        }
    }

    // Exibe o vencedor e sua pontuação total
    printf("Vencedor: Jogador %d com %d pontos!\n", vencedor + 1, total[vencedor]);

    return 0;
}

//EXERCÍCIO 2 

#include <stdio.h>

int main() {
    int n;  // Variável para armazenar o tamanho da matriz

    // Solicita ao usuário o tamanho da matriz
    printf("Digite o tamanho da matriz (n): ");
    scanf("%d", &n);  // Lê o valor de n

    int matriz[n][n];  // Declaração da matriz nxn

    // Preenchimento da matriz de acordo com o padrão
    for (int i = 0; i < n; i++) {  // Laço externo percorre as linhas
        for (int j = 0; j < n; j++) {  // Laço interno percorre as colunas
            if (j < i) {  // Quando a coluna j é menor que a linha i
                matriz[i][j] = j + 1;  // Preenche com valores crescentes à esquerda da diagonal
            } else if (j == i) {  // Quando a posição está na diagonal principal
                matriz[i][j] = i + 1;  // Preenche com o número da linha (valor da diagonal)
            } else {  // Quando a coluna j é maior que a linha i
                matriz[i][j] = 0;  // Preenche com 0 à direita da diagonal
            }
        }
    }

    // Exibe a matriz formatada
    for (int i = 0; i < n; i++) {  // Laço para percorrer as linhas
        for (int j = 0; j < n; j++) {  // Laço para percorrer as colunas
            printf("%d", matriz[i][j]);  // Exibe o valor da matriz na posição i,j
        }
        printf("\n");  // Pula para a próxima linha após imprimir uma linha inteira da matriz
    }

    return 0;
}

